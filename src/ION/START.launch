<launch>

#### start the hokoyu_node #####################################
<node pkg="hokuyo_node" type="hokuyo_node"
name="hokuyo_node" output="screen">
</node>

#### publish initial base_link -> laser transform ######################
<node pkg="tf" type="static_transform_publisher" name="base_link_to_laser" args="0 0 0 0 0 0 /base_link /laser 100"/>

#### start the laser scan_matcher ##############################
<node pkg="laser_scan_matcher" type="laser_scan_matcher_node" 
name="laser_scan_matcher_node" output="screen">

    <param name="fixed_frame" value = "odom"/>
    <param name="base_frame" value="base_link"/>
    #<param name="fixed_frame" value="world"/>
    <param name="use_alpha_beta" value="true"/>
    <param name="use_odom" value="false"/>
    <param name="use_imu" value="false"/>
    <param name="max_iterations" value="10"/>
    <param name="publish_pose" value="true"/>
    <param name="publish_tf" value="true"/>
    <param name="use_vel" value="false"/>

</node>

#### publish laser -> base_link transform #####################
#<node pkg="tf" type="static_transform_publisher" name="laser_to_base_link" args="0 0 0 0 0 0 /laser /base_link 100"/>

#### publish base_link -> odom transform ######################
#<node pkg="tf" type="static_transform_publisher" name="base_link_to_odom" args="0 0 0 0 0 0 /base_link /odom 100"/>

#### publish odom -> base_link transform ######################
<node pkg="tf" type="static_transform_publisher" name="odom_to_base_link" args="0 0 0 0 0 0 /odom /base_link 100"/>

#### start slam_gmapping ######################################
<node pkg = "gmapping" type="slam_gmapping"
name="slam_gmapping" output="screen">
    
    <param name="map_update_interval" value="1.0"/>
    <param name="delta" value="0.02"/>

</node>

</launch>
